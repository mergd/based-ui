{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "menubar",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/components/ui/menubar.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Menubar as MenubarPrimitive } from \"@base-ui-components/react/menubar\"\nimport { Menu } from \"@base-ui-components/react/menu\"\nimport { CheckIcon, ChevronRightIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Menubar = React.forwardRef<\n\tReact.ElementRef<typeof MenubarPrimitive>,\n\tReact.ComponentPropsWithoutRef<typeof MenubarPrimitive>\n>(({ className, ...props }, ref) => (\n\t<MenubarPrimitive\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"flex rounded-md border border-border bg-background p-0.5\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nMenubar.displayName = MenubarPrimitive.displayName\n\nconst MenubarMenu = Menu.Root\n\nconst MenubarTrigger = React.forwardRef<\n\tReact.ElementRef<typeof Menu.Trigger>,\n\tReact.ComponentPropsWithoutRef<typeof Menu.Trigger>\n>(({ className, ...props }, ref) => (\n\t<Menu.Trigger\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"h-8 rounded px-3 text-sm font-medium text-muted-foreground outline-none select-none focus-visible:bg-accent data-[disabled]:opacity-50 data-[popup-open]:bg-accent\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nMenubarTrigger.displayName = Menu.Trigger.displayName\n\ninterface MenubarContentProps\n\textends React.ComponentPropsWithoutRef<typeof Menu.Popup> {\n\tsideOffset?: number\n}\n\nconst MenubarContent = React.forwardRef<\n\tReact.ElementRef<typeof Menu.Popup>,\n\tMenubarContentProps\n>(({ className, sideOffset = 6, ...props }, ref) => (\n\t<Menu.Portal>\n\t\t<Menu.Positioner className=\"outline-none\" sideOffset={sideOffset}>\n\t\t\t<Menu.Popup\n\t\t\t\tref={ref}\n\t\t\t\tclassName={cn(\n\t\t\t\t\t\"origin-[var(--transform-origin)] rounded-md bg-popover py-1 text-popover-foreground shadow-lg shadow-border outline outline-1 outline-border data-[ending-style]:opacity-0 data-[ending-style]:transition-opacity data-[instant]:transition-none dark:shadow-none dark:outline dark:outline-1 dark:-outline-offset-1 dark:outline-border\",\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t</Menu.Positioner>\n\t</Menu.Portal>\n))\nMenubarContent.displayName = Menu.Popup.displayName\n\nconst MenubarItem = React.forwardRef<\n\tReact.ElementRef<typeof Menu.Item>,\n\tReact.ComponentPropsWithoutRef<typeof Menu.Item>\n>(({ className, ...props }, ref) => (\n\t<Menu.Item\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"flex cursor-default items-center justify-between gap-4 px-4 py-2 text-sm leading-4 outline-none select-none data-[highlighted]:relative data-[highlighted]:z-0 data-[highlighted]:text-background data-[highlighted]:before:absolute data-[highlighted]:before:inset-x-1 data-[highlighted]:before:inset-y-0 data-[highlighted]:before:z-[-1] data-[highlighted]:before:rounded-sm data-[highlighted]:before:bg-foreground\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nMenubarItem.displayName = Menu.Item.displayName\n\nconst MenubarSeparator = React.forwardRef<\n\tReact.ElementRef<typeof Menu.Separator>,\n\tReact.ComponentPropsWithoutRef<typeof Menu.Separator>\n>(({ className, ...props }, ref) => (\n\t<Menu.Separator\n\t\tref={ref}\n\t\tclassName={cn(\"mx-4 my-1.5 h-px bg-border\", className)}\n\t\t{...props}\n\t/>\n))\nMenubarSeparator.displayName = Menu.Separator.displayName\n\nconst MenubarSubMenu = Menu.Root\n\nconst MenubarSubTrigger = React.forwardRef<\n\tReact.ElementRef<typeof Menu.SubmenuTrigger>,\n\tReact.ComponentPropsWithoutRef<typeof Menu.SubmenuTrigger> & {\n\t\tchildren?: React.ReactNode\n\t}\n>(({ className, children, ...props }, ref) => (\n\t<Menu.SubmenuTrigger\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"flex w-full cursor-default items-center justify-between gap-4 px-4 py-2 text-sm leading-4 outline-none select-none data-[highlighted]:relative data-[highlighted]:z-0 data-[highlighted]:text-background data-[highlighted]:before:absolute data-[highlighted]:before:inset-x-1 data-[highlighted]:before:inset-y-0 data-[highlighted]:before:z-[-1] data-[highlighted]:before:rounded-sm data-[highlighted]:before:bg-foreground data-[popup-open]:relative data-[popup-open]:z-0 data-[popup-open]:before:absolute data-[popup-open]:before:inset-x-1 data-[popup-open]:before:inset-y-0 data-[popup-open]:before:z-[-1] data-[popup-open]:before:rounded-sm data-[popup-open]:before:bg-accent data-[highlighted]:data-[popup-open]:before:bg-foreground\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t{children}\n\t\t<ChevronRightIcon className=\"size-4\" />\n\t</Menu.SubmenuTrigger>\n))\nMenubarSubTrigger.displayName = Menu.SubmenuTrigger.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n\tReact.ElementRef<typeof Menu.CheckboxItem>,\n\tReact.ComponentPropsWithoutRef<typeof Menu.CheckboxItem> & {\n\t\tchildren?: React.ReactNode\n\t}\n>(({ className, children, ...props }, ref) => (\n\t<Menu.CheckboxItem\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"flex cursor-default items-center justify-between gap-4 px-4 py-2 text-sm leading-4 outline-none select-none data-[highlighted]:relative data-[highlighted]:z-0 data-[highlighted]:text-background data-[highlighted]:before:absolute data-[highlighted]:before:inset-x-1 data-[highlighted]:before:inset-y-0 data-[highlighted]:before:z-[-1] data-[highlighted]:before:rounded-sm data-[highlighted]:before:bg-foreground\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<span>{children}</span>\n\t\t<Menu.CheckboxItemIndicator>\n\t\t\t<CheckIcon className=\"size-4\" />\n\t\t</Menu.CheckboxItemIndicator>\n\t</Menu.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = Menu.CheckboxItem.displayName\n\nconst MenubarRadioGroup = Menu.RadioGroup\n\nconst MenubarRadioItem = React.forwardRef<\n\tReact.ElementRef<typeof Menu.RadioItem>,\n\tReact.ComponentPropsWithoutRef<typeof Menu.RadioItem> & {\n\t\tchildren?: React.ReactNode\n\t}\n>(({ className, children, ...props }, ref) => (\n\t<Menu.RadioItem\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"flex cursor-default items-center justify-between gap-4 px-4 py-2 text-sm leading-4 outline-none select-none data-[highlighted]:relative data-[highlighted]:z-0 data-[highlighted]:text-background data-[highlighted]:before:absolute data-[highlighted]:before:inset-x-1 data-[highlighted]:before:inset-y-0 data-[highlighted]:before:z-[-1] data-[highlighted]:before:rounded-sm data-[highlighted]:before:bg-foreground\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<span>{children}</span>\n\t\t<Menu.RadioItemIndicator>\n\t\t\t<CheckIcon className=\"size-4\" />\n\t\t</Menu.RadioItemIndicator>\n\t</Menu.RadioItem>\n))\nMenubarRadioItem.displayName = Menu.RadioItem.displayName\n\nconst MenubarItemShortcut = React.forwardRef<\n\tHTMLSpanElement,\n\tReact.HTMLAttributes<HTMLSpanElement>\n>(({ className, ...props }, ref) => (\n\t<span\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"ml-auto pl-8 text-xs tracking-widest text-muted-foreground\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nMenubarItemShortcut.displayName = \"MenubarItemShortcut\"\n\nexport {\n\tMenubar,\n\tMenubarMenu,\n\tMenubarTrigger,\n\tMenubarContent,\n\tMenubarItem,\n\tMenubarSeparator,\n\tMenubarSubTrigger,\n\tMenubarSubMenu,\n\tMenubarCheckboxItem,\n\tMenubarRadioGroup,\n\tMenubarRadioItem,\n\tMenubarItemShortcut,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}