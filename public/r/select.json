{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "select",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/components/ui/select.tsx",
      "content": "import * as React from \"react\"\nimport { Select as BaseSelect } from \"@base-ui-components/react/select\"\nimport { CheckIcon, ChevronsUpDownIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst SelectGroup = BaseSelect.Group\nSelectGroup.displayName = \"SelectGroup\"\n\nconst Select = <T,>(props: BaseSelect.Root.Props<T>) => (\n\t<BaseSelect.Root alignItemToTrigger={false} modal={false} {...props} />\n)\nSelect.displayName = \"Select\"\n\nconst SelectTrigger = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseSelect.Trigger>\n>(({ children, className, ...props }, ref) => (\n\t<BaseSelect.Trigger\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"flex h-10 min-w-36 cursor-pointer items-center justify-between gap-3 rounded-md border border-input bg-background px-3.5 py-2 pr-3 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring focus:ring-offset-1 disabled:cursor-not-allowed disabled:opacity-50 data-[popup-open]:bg-accent data-[popup-open]:text-accent-foreground [&>span]:line-clamp-1\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t{children}\n\t\t<BaseSelect.Icon className=\"flex\">\n\t\t\t<ChevronsUpDownIcon className=\"size-4 opacity-50\" />\n\t\t</BaseSelect.Icon>\n\t</BaseSelect.Trigger>\n))\nSelectTrigger.displayName = \"SelectTrigger\"\n\nconst SelectValue = React.forwardRef<\n\tHTMLSpanElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseSelect.Value>\n>(({ className, ...props }, ref) => (\n\t<BaseSelect.Value ref={ref} className={cn(\"text-sm\", className)} {...props} />\n))\nSelectValue.displayName = \"SelectValue\"\n\ninterface SelectContentProps\n\textends React.ComponentPropsWithoutRef<typeof BaseSelect.Popup> {\n\tpositionerProps?: BaseSelect.Positioner.Props\n}\n\nconst SelectContent = React.forwardRef<HTMLDivElement, SelectContentProps>(\n\t({ children, className, positionerProps, ...props }, ref) => (\n\t\t<BaseSelect.Positioner\n\t\t\tsideOffset={8}\n\t\t\t{...positionerProps}\n\t\t\tclassName={cn(\"z-50 w-[--anchor-width]\", positionerProps?.className)}\n\t\t>\n\t\t\t<BaseSelect.Popup\n\t\t\t\tref={ref}\n\t\t\t\tclassName={cn(\n\t\t\t\t\t\"relative z-50 max-h-[var(--available-height)] w-[var(--anchor-width)] origin-[var(--transform-origin)] overflow-y-auto rounded-md border bg-popover py-1 text-popover-foreground shadow-lg outline-none\",\n\t\t\t\t\t\"transition-[transform,scale,opacity] data-[ending-style]:scale-95 data-[starting-style]:scale-95 data-[ending-style]:opacity-0 data-[starting-style]:opacity-0\",\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</BaseSelect.Popup>\n\t\t</BaseSelect.Positioner>\n\t)\n)\nSelectContent.displayName = \"SelectContent\"\n\nconst SelectItem = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseSelect.Item>\n>(({ children, className, ...props }, ref) => (\n\t<BaseSelect.Item\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"relative grid cursor-default select-none grid-cols-[1rem_1fr] items-center gap-2 rounded-sm py-1.5 pl-2.5 pr-4 text-sm outline-none\",\n\t\t\t\"data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground\",\n\t\t\t\"data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<div className=\"col-start-1 flex size-4 items-center justify-center\">\n\t\t\t<BaseSelect.ItemIndicator>\n\t\t\t\t<CheckIcon className=\"size-3\" />\n\t\t\t</BaseSelect.ItemIndicator>\n\t\t</div>\n\t\t<BaseSelect.ItemText className=\"col-start-2\">\n\t\t\t{children}\n\t\t</BaseSelect.ItemText>\n\t</BaseSelect.Item>\n))\nSelectItem.displayName = \"SelectItem\"\n\nconst SelectGroupLabel = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseSelect.GroupLabel>\n>(({ className, ...props }, ref) => (\n\t<BaseSelect.GroupLabel\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"px-2 py-1.5 text-sm font-medium text-muted-foreground\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nSelectGroupLabel.displayName = \"SelectGroupLabel\"\n\nconst SelectSeparator = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseSelect.Separator>\n>(({ className, ...props }, ref) => (\n\t<BaseSelect.Separator\n\t\tref={ref}\n\t\tclassName={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n\t\t{...props}\n\t/>\n))\nSelectSeparator.displayName = \"SelectSeparator\"\n\nexport {\n\tSelect,\n\tSelectContent,\n\tSelectGroup,\n\tSelectGroupLabel,\n\tSelectItem,\n\tSelectSeparator,\n\tSelectTrigger,\n\tSelectValue,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}