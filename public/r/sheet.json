{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "sheet",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/components/ui/sheet.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Dialog } from \"@base-ui-components/react/dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = Dialog.Root\n\nconst SheetTrigger = Dialog.Trigger\nSheetTrigger.displayName = \"SheetTrigger\"\n\nconst SheetClose = Dialog.Close\nSheetClose.displayName = \"SheetClose\"\n\nconst SheetBackdrop = React.forwardRef<\n\tReact.ElementRef<\"div\">,\n\tReact.ComponentPropsWithoutRef<typeof Dialog.Backdrop>\n>(({ className, ...props }, ref) => (\n\t<Dialog.Backdrop\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"fixed inset-0 h-dvh bg-black/70 transition-all duration-300 [&[data-ending-style]]:opacity-0 [&[data-starting-style]]:opacity-0\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nSheetBackdrop.displayName = \"SheetBackdrop\"\n\nconst sheetContentVariants = cva(\n\t\"fixed max-h-[calc(100vh-2rem)] bg-popover p-6 text-popover-foreground shadow-md outline-none transition-all duration-500 ease-in-out\",\n\t{\n\t\tvariants: {\n\t\t\tside: {\n\t\t\t\tbottom:\n\t\t\t\t\t\"inset-x-0 bottom-0 mx-auto h-fit w-[calc(100vw-2rem)] origin-bottom -translate-y-4 rounded-lg border [&[data-ending-style]]:translate-y-full [&[data-starting-style]]:translate-y-full\",\n\t\t\t\tright:\n\t\t\t\t\t\"inset-y-0 right-0 top-4 h-full w-[calc(100vw-2rem)] origin-right -translate-x-4 rounded-lg border sm:w-full sm:max-w-xs [&[data-ending-style]]:translate-x-full [&[data-starting-style]]:translate-x-full\",\n\t\t\t\tleft: \"inset-y-0 left-0 top-4 h-full w-[calc(100vw-2rem)] origin-left translate-x-4 rounded-lg border sm:max-w-xs [&[data-ending-style]]:-translate-x-full [&[data-starting-style]]:-translate-x-full\",\n\t\t\t\ttop: \"inset-x-0 top-0 mx-auto h-fit w-[calc(100vw-2rem)] origin-top translate-y-4 rounded-lg border [&[data-ending-style]]:-translate-y-full [&[data-starting-style]]:-translate-y-full\",\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tside: \"right\",\n\t\t},\n\t}\n)\n\nexport interface SheetContentProps\n\textends VariantProps<typeof sheetContentVariants>,\n\t\tReact.ComponentPropsWithoutRef<typeof Dialog.Popup> {}\n\nconst SheetContent = React.forwardRef<\n\tReact.ElementRef<\"div\">,\n\tSheetContentProps\n>(({ className, side, children, ...props }, ref) => (\n\t<Dialog.Portal>\n\t\t<SheetBackdrop />\n\t\t<Dialog.Popup\n\t\t\tref={ref}\n\t\t\tclassName={cn(sheetContentVariants({ side, className }))}\n\t\t\t{...props}\n\t\t>\n\t\t\t<SheetClose className=\"absolute right-4 top-4 rounded-sm opacity-50 transition-opacity hover:opacity-100 focus:outline-none disabled:pointer-events-none\">\n\t\t\t\t<XIcon className=\"size-4\" />\n\t\t\t\t<span className=\"sr-only\">Close</span>\n\t\t\t</SheetClose>\n\t\t\t{children}\n\t\t</Dialog.Popup>\n\t</Dialog.Portal>\n))\nSheetContent.displayName = \"SheetContent\"\n\nconst SheetHeader = React.forwardRef<\n\tHTMLDivElement,\n\tReact.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n\t<div\n\t\tref={ref}\n\t\tclassName={cn(\"flex flex-col space-y-2\", className)}\n\t\t{...props}\n\t/>\n))\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetTitle = React.forwardRef<\n\tHTMLHeadingElement,\n\tReact.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n\t<h4\n\t\tref={ref}\n\t\tclassName={cn(\"text-lg font-medium text-foreground\", className)}\n\t\t{...props}\n\t/>\n))\nSheetTitle.displayName = \"SheetTitle\"\n\nconst SheetDescription = React.forwardRef<\n\tHTMLParagraphElement,\n\tReact.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n\t<p\n\t\tref={ref}\n\t\tclassName={cn(\"text-sm text-muted-foreground\", className)}\n\t\t{...props}\n\t/>\n))\nSheetDescription.displayName = \"SheetDescription\"\n\nconst SheetFooter = React.forwardRef<\n\tHTMLDivElement,\n\tReact.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n\t<div\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nSheetFooter.displayName = \"SheetFooter\"\n\nexport {\n\tSheet,\n\tSheetBackdrop,\n\tSheetContent,\n\tSheetTrigger,\n\tSheetClose,\n\tSheetHeader,\n\tSheetTitle,\n\tSheetDescription,\n\tSheetFooter,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}