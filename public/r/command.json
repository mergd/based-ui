{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "command",
  "type": "registry:ui",
  "dependencies": [
    "cmdk-base"
  ],
  "registryDependencies": [
    "https://ui.fldr.zip/r/dialog.json"
  ],
  "files": [
    {
      "path": "src/components/ui/command.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Command as CommandBase } from \"cmdk-base\"\nimport { Search } from \"lucide-react\"\n\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Command = React.forwardRef<\n\tReact.ElementRef<typeof CommandBase>,\n\tReact.ComponentPropsWithoutRef<typeof CommandBase>\n>(({ className, ...props }, ref) => (\n\t<CommandBase\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"flex size-full flex-col overflow-hidden rounded-lg border bg-popover text-popover-foreground outline-none\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nCommand.displayName = \"Command\"\n\nconst CommandDialog = ({\n\tchildren,\n\t...props\n}: React.ComponentProps<typeof Dialog>) => {\n\treturn (\n\t\t<Dialog {...props}>\n\t\t\t<DialogContent className=\"overflow-hidden border-none p-0 sm:max-w-[600px] [&_[data-dialog-close]]:hidden\">\n\t\t\t\t<Command>{children}</Command>\n\t\t\t</DialogContent>\n\t\t</Dialog>\n\t)\n}\nCommandDialog.displayName = \"CommandDialog\"\n\nconst CommandInput = React.forwardRef<\n\tReact.ElementRef<typeof CommandBase.Input>,\n\tReact.ComponentPropsWithoutRef<typeof CommandBase.Input>\n>(({ className, ...props }, ref) => (\n\t<div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n\t\t<Search className=\"mr-2 size-4 shrink-0 opacity-50\" />\n\t\t<CommandBase.Input\n\t\t\tref={ref}\n\t\t\tclassName={cn(\n\t\t\t\t\"flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t</div>\n))\nCommandInput.displayName = \"CommandInput\"\n\nconst CommandList = React.forwardRef<\n\tReact.ElementRef<typeof CommandBase.List>,\n\tReact.ComponentPropsWithoutRef<typeof CommandBase.List>\n>(({ className, ...props }, ref) => (\n\t<CommandBase.List\n\t\tref={ref}\n\t\tclassName={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n\t\t{...props}\n\t/>\n))\nCommandList.displayName = \"CommandList\"\n\nconst CommandEmpty = React.forwardRef<\n\tReact.ElementRef<typeof CommandBase.Empty>,\n\tReact.ComponentPropsWithoutRef<typeof CommandBase.Empty>\n>((props, ref) => (\n\t<CommandBase.Empty\n\t\tref={ref}\n\t\tclassName=\"py-6 text-center text-sm\"\n\t\t{...props}\n\t/>\n))\n\nCommandEmpty.displayName = \"CommandEmpty\"\n\nconst CommandGroup = React.forwardRef<\n\tReact.ElementRef<typeof CommandBase.Group>,\n\tReact.ComponentPropsWithoutRef<typeof CommandBase.Group>\n>(({ className, ...props }, ref) => (\n\t<CommandBase.Group\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nCommandGroup.displayName = \"CommandGroup\"\n\nconst CommandSeparator = React.forwardRef<\n\tReact.ElementRef<typeof CommandBase.Separator>,\n\tReact.ComponentPropsWithoutRef<typeof CommandBase.Separator>\n>(({ className, ...props }, ref) => (\n\t<CommandBase.Separator\n\t\tref={ref}\n\t\tclassName={cn(\"-mx-1 h-px bg-border\", className)}\n\t\t{...props}\n\t/>\n))\nCommandSeparator.displayName = \"CommandSeparator\"\n\nconst CommandItem = React.forwardRef<\n\tReact.ElementRef<typeof CommandBase.Item>,\n\tReact.ComponentPropsWithoutRef<typeof CommandBase.Item>\n>(({ className, ...props }, ref) => (\n\t<CommandBase.Item\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nCommandItem.displayName = \"CommandItem\"\n\nconst CommandShortcut = ({\n\tclassName,\n\t...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n\treturn (\n\t\t<span\n\t\t\tclassName={cn(\n\t\t\t\t\"ml-auto flex items-center gap-1 text-xs tracking-widest text-muted-foreground\",\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n\tCommand,\n\tCommandDialog,\n\tCommandInput,\n\tCommandList,\n\tCommandEmpty,\n\tCommandGroup,\n\tCommandItem,\n\tCommandShortcut,\n\tCommandSeparator,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}