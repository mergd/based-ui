{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/components/ui/button.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { mergeProps } from \"@base-ui-components/react\"\nimport { useRender } from \"@base-ui-components/react/use-render\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n\t\"cursor-pointer inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium transition-colors duration-200 outline-none select-none focus-visible:outline focus-visible:outline-2 focus-visible:-outline-offset-1 focus-visible:outline-blue-800 disabled:pointer-events-none disabled:opacity-70 [&_svg]:shrink-0\",\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: \"bg-primary text-primary-foreground hover:bg-primary/80\",\n\t\t\t\tsecondary:\n\t\t\t\t\t\"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n\t\t\t\tghost: \"text-foreground hover:bg-accent hover:text-accent-foreground\",\n\t\t\t\toutline:\n\t\t\t\t\t\"border bg-transparent text-foreground hover:bg-accent hover:text-accent-foreground\",\n\t\t\t\tlink: \"text-foreground hover:underline\",\n\t\t\t\tdestructive:\n\t\t\t\t\t\"bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n\t\t\t\tsuccess: \"bg-success text-success-foreground hover:bg-success/80\",\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tsm: \"h-8 px-2.5 text-sm\",\n\t\t\t\tmd: \"h-9 px-3 text-base\",\n\t\t\t\tlg: \"h-10 px-3.5 text-base\",\n\t\t\t\t\"icon-sm\": \"size-8 text-sm [&>svg]:size-4\",\n\t\t\t\ticon: \"size-9 text-base [&>svg]:size-4\",\n\t\t\t\t\"icon-lg\": \"size-10 text-base [&>svg]:size-5\",\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: \"default\",\n\t\t\tsize: \"lg\",\n\t\t},\n\t}\n)\n\nexport interface ButtonProps\n\textends VariantProps<typeof buttonVariants>,\n\t\tReact.ButtonHTMLAttributes<HTMLButtonElement>,\n\t\tuseRender.ComponentProps<\"button\"> {}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\tvariant,\n\t\t\tsize,\n\t\t\trender = <button />,\n\t\t\tchildren,\n\t\t\tdisabled,\n\t\t\t...props\n\t\t},\n\t\tref\n\t) => {\n\t\tconst defaultProps: useRender.ElementProps<\"button\"> = {\n\t\t\tclassName: cn(buttonVariants({ variant, size, className })),\n\t\t\tref: ref,\n\t\t\tdisabled: disabled,\n\t\t}\n\n\t\tconst { renderElement } = useRender({\n\t\t\trender,\n\t\t\tprops: mergeProps<\"button\">(defaultProps, props, { children }),\n\t\t})\n\n\t\treturn renderElement()\n\t}\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}